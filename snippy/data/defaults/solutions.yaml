data:
- brief: Debug LXC containers
  category: solution
  created: '2017-01-29T12:31:00.000001+00:00'
  data:
  - '## Description'
  - ''
  - Instructions how to debug LXC containers.
  - ''
  - '## References'
  - ''
  - '   ```'
  - '   # Versions'
  - '   # LXC containers version 2.0.9'
  - ''
  - '   # LXC containers release notes'
  - '   > '
  - ''
  - '   # LXC containers downloads'
  - '   > https://linuxcontainers.org/lxc/downloads/'
  - '   ```'
  - ''
  - '## Commands'
  - ''
  - '   ```'
  - '   # Install on Fedora 38'
  - '   > https://www.cyberciti.biz/faq/how-to-install-and-setup-lxc-linux-container-on-fedora-linux-26/'
  - '   $ yum install lxc lxc-templates lxc-extra debootstrap libvirt perl gpg # Fedora
    38 2.0.9-1'
  - '   $ systemctl start libvirtd.service'
  - '   $ systemctl start lxc.service'
  - '   $ systemctl status libvirtd.service'
  - '   $ systemctl status lxc.service'
  - '   $ lxc-checkconfig | grep -i bridge # enabled, loaded'
  - '   $ ip a # should have virbr0 and virbr0-nic'
  - '   $ brctl show'
  - '   $ cat /etc/lxc/default.conf'
  - '   $ cp /etc/lxc/default.conf ~/.config/lxc/default.conf'
  - '   $ vi ~/.config/lxc/default.conf # Set lxc.network.link to virbr0'
  - '     lxc.network.type = veth'
  - '     lxc.network.link = virbr0'
  - '     lxc.network.flags = up'
  - '     lxc.network.hwaddr = 00:16:3e:xx:xx:xx'
  - '   $ journalctl -u libvirtd.service | grep range # IP address range for containers'
  - '   ```'
  - ''
  - '   ```'
  - '   # Run container'
  - '   $ lxc-create -t download -n ubuntu-c1 -- -d ubuntu -r xenial -a amd64'
  - '   $ lxc-ls'
  - '   $ /var/lib/lxc/ubuntu-c1/rootfs/ passwd ubuntu # set admin password'
  - '   $ chroot /var/lib/lxc/ubuntu-c1/rootfs/ passwd # make sure the account is
    locked'
  - '   $ lxc-start -n ubuntu-c1'
  - '   $ lxc-start -n ubuntu-c1 -l trace -o stdout'
  - '   $ lxc-info -n ubuntu-c1'
  - '   $ lxc-ls -f'
  - '   $ lxc-console -n ubuntu-c1 # ubuntu/lxc'
  - '   $ lxc-stop -n ubuntu-c1'
  - '   ```'
  - ''
  - '   ```'
  - '   # List images'
  - '   $ lxc-create -t download -n NULL -- --list'
  - '   ```'
  - ''
  - '## Configurations'
  - ''
  - '## Solutions'
  - ''
  - '   ```'
  - '   # Exit from container console connection not working'
  - '   # =================================================='
  - '   #'
  - '   # At least on Ubuntu image, the exit from console connection does not'
  - '   # work. Also key combination ctrl-a q does not work. The options are to'
  - '   # stop the container from another console or to run the container as a'
  - '   # daemon. This seems to be a bug.'
  - '   > https://serverfault.com/a/438824'
  - '   $ lxc-start -d -n ubuntu-c1'
  - '   $ exit / ctrl-a q'
  - '   $ lxc-stop -n ubuntu-c1'
  - '   ```'
  - ''
  - '## Whiteboard'
  - ''
  description: Instructions how to debug LXC containers.
  digest: b5223da1f268d62cd5104f87693c0429a33a5f00769317a6f20bad32a2dbe6c9
  filename: howto-debug-lxc-containers.mkdn
  groups:
  - containers
  languages: []
  links:
  - https://linuxcontainers.org/lxc/downloads/
  - https://serverfault.com/a/438824
  - https://www.cyberciti.biz/faq/how-to-install-and-setup-lxc-linux-container-on-fedora-linux-26/
  name: ''
  source: ''
  tags:
  - containers
  - debug
  - howto
  - lxc
  updated: '2019-01-27T13:18:03.950027+00:00'
  uuid: eb70559c-6019-44cc-99a9-ad600006ca4e
  versions: []
- brief: Debug Elasticsearch
  category: solution
  created: '2017-10-20T11:11:19.000001+00:00'
  data:
  - '## Description'
  - ''
  - Debug and configure Elasticsearch.
  - ''
  - '## References'
  - ''
  - '## Commands'
  - ''
  - '## Configurations'
  - ''
  - '   ```'
  - '   # Bool query with Elasticsearch 5.6.5 for Kibana Dev Tools / Console.'
  - '   # Only specific fields defined by ''_source'' are returned.'
  - '   > GET _search'
  - '     {'
  - '       "_source": ["counter.001A001", "counter.001A002", "fields.*"],'
  - '       "query": {'
  - '         "bool": {'
  - '           "must": ['
  - '             {'
  - '               "query_string": {'
  - '                 "query": "*",'
  - '                 "fields": ["counter.001A001","counter.001A002"]'
  - '               }'
  - '             },'
  - '             {"term": {"fields.es_env.keyword": "bench1"}},'
  - '             {"term": {"fields.es_module.keyword": "module"}},'
  - '             {"term": {"fields.es_test.keyword": "performance"}},'
  - '             {"wildcard": {"fields.es_version.keyword": "1.0.*"}}'
  - '           ]'
  - '         }'
  - '       }'
  - '     }'
  - '   ```'
  - ''
  - '   ```'
  - '   # Query filter with Elasticsearch 5.6.5 for Kibana Dev Tools / Console.'
  - '   > GET _search'
  - '     {'
  - '       "query": {'
  - '         "bool": {'
  - '           "must": {'
  - '             "query_string": {'
  - '               "query": "*",'
  - '               "fields": ["counter.001A001","counter.001A002"]'
  - '             }'
  - '           },'
  - '           "filter": ['
  - '             {"term": {"fields.es_env.keyword": "bench1"}},'
  - '             {"term": {"fields.es_module.keyword": "module"}},'
  - '             {"term": {"fields.es_test.keyword": "performance"}},'
  - '             {"term": {"fields.es_version.keyword": "1.0.0"}}'
  - '           ]'
  - '         }'
  - '       }'
  - '     }'
  - '   ```'
  - ''
  - '   ```'
  - '   # Query unique values of specific field with Elasticsearch 5.6.5 for'
  - '   # Kibana Dev Tools / Console.'
  - '   > GET _search'
  - '     {'
  - '       "size": 0,'
  - '       "aggs": {'
  - '         "versions": {'
  - '           "terms": {'
  - '             "field": "fields.es_version.keyword",'
  - '             "size": 100'
  - '           }'
  - '         }'
  - '       }'
  - '     }'
  - '   ```'
  - ''
  - '## Solutions'
  - ''
  - '   ```'
  - '   # Using Elasticsearch behind reverse proxy'
  - '   # ========================================'
  - '   #'
  - '   # If Elasticsearch is located in own URL behind reverse proxy like nginx,'
  - '   # the Elasticsearch Python library must use code like below to set the'
  - '   # url_prefix.'
  - '   >>> from elasticsearch import Elasticsearch'
  - '   >>> elastic = Elasticsearch([''http://10.133.196.101:8080''], url_prefix=''elastic'')'
  - '   ```'
  - ''
  - '## Whiteboard'
  - ''
  description: Debug and configure Elasticsearch.
  digest: a461b533a26b29ae0a46a45c5dbf09346ce6115aedbd0a5e1c1053db86609b1d
  filename: howto-debug-elasticsearch.mkdn
  groups:
  - elasticsearch
  languages: []
  links: []
  name: ''
  source: ''
  tags:
  - debug
  - elastic
  - elasticsearch
  - howto
  updated: '2019-01-27T13:17:31.926929+00:00'
  uuid: 6c61fbe0-d2ba-4ed4-90b9-86f8147d1b23
  versions: []
- brief: Debug Elastic Beats metrics
  category: solution
  created: '2017-10-30T08:21:40.000001+00:00'
  data:
  - '## Description'
  - ''
  - Debug and configure Elastic Beats.
  - ''
  - '## References'
  - ''
  - '   ```'
  - '   # Filebeat configuration'
  - '   > https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-configuration-details.html'
  - ''
  - '   # Enable logs from Filebeat'
  - '   > https://www.elastic.co/guide/en/beats/filebeat/master/enable-filebeat-debugging.html'
  - '   ```'
  - ''
  - '## Commands'
  - ''
  - '   ```'
  - '   # Run Filebeat with full log level'
  - '   $ ./filebeat -e -c config/filebeat.yml -d "*"'
  - '   ```'
  - ''
  - '## Configurations'
  - ''
  - '   ```'
  - '   # Filebeat configuration'
  - '   $ vi config/filebeat.yml'
  - '     filebeat.prospectors:'
  - '     - input_type: log'
  - '       paths:'
  - '         - ./examples/cbts-syslogs.log'
  - '       fields:'
  - '         es_index: "petelk.syslog"'
  - '         es_codec: "plain"'
  - '         es_class: "syslog"'
  - ''
  - '     - input_type: log'
  - '       paths:'
  - '         - ./examples/counters.json'
  - '       fields:'
  - '         es_index: "petelk.counters"'
  - '         es_codec: "json"'
  - '         es_class: "counter"'
  - ''
  - '     #processors:'
  - '     # - decode_json_fields:'
  - '     #     fields: ["message"]'
  - '     #     process_array: false'
  - '     #     max_depth: 3'
  - '     #     when:'
  - '     #       equals:'
  - '     #         fields.es_codec: "json"'
  - ''
  - '     output.logstash:'
  - '       hosts: ["logstash:5044"]'
  - '   ```'
  - ''
  - '   ```'
  - '   # Logstash pipeline configuration.'
  - '   $ vi pipeline/filebeat.json'
  - '     input {'
  - '         beats {'
  - '             port => 5044'
  - '         }'
  - '     }'
  - ''
  - '     filter {'
  - '         if [fields][es_codec] == "json" {'
  - '             json {'
  - '                 source => "message"'
  - '             }'
  - '         }'
  - '     }'
  - ''
  - '     output {'
  - '         if [fields][es_codec] == "plain" {'
  - '             elasticsearch {'
  - '                 hosts => ["elasticsearch:9200"]'
  - '                 index => "%{[fields][es_index]}-%{+YYYY.MM.dd}"'
  - '                 document_type => "%{[fields][es_class]}"'
  - '                 user => "elastic"'
  - '                 password => "changeme"'
  - '             }'
  - '         } else {'
  - '             elasticsearch {'
  - '                 hosts => ["elasticsearch:9200"]'
  - '                 index => "%{[fields][es_index]}-%{+YYYY.MM.dd}"'
  - '                 document_type => "%{[fields][es_class]}"'
  - '                 user => "elastic"'
  - '                 password => "changeme"'
  - '             }'
  - '         }'
  - '     }'
  - '   ```'
  - ''
  - '## Solutions'
  - ''
  - '## Whiteboard'
  - ''
  description: Debug and configure Elastic Beats.
  digest: eb792f8015ace7499af1a5ef0be0b2cf232c997ef809807ac2aac33aea7ac197
  filename: howto-debug-elastic-beats.mkdn
  groups:
  - beats
  languages: []
  links:
  - https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-configuration-details.html
  - https://www.elastic.co/guide/en/beats/filebeat/master/enable-filebeat-debugging.html
  name: ''
  source: ''
  tags:
  - Elastic
  - beats
  - debug
  - filebeat
  - howto
  updated: '2019-01-27T13:19:25.340470+00:00'
  uuid: 9015d79e-65d8-4cbd-97bc-0fa49e7a278c
  versions: []
- brief: Test docker log drivers
  category: solution
  created: '2017-10-30T08:24:28.000001+00:00'
  data:
  - '## Description'
  - ''
  - Investigate docker log drivers and the logs2kafka log plugin.
  - ''
  - '## References'
  - ''
  - '   ```'
  - '   # Kube Kafka log driver'
  - '   > https://github.com/MickayG/moby-kafka-logdriver'
  - '   ```'
  - ''
  - '   ```'
  - '   # Logs2Kafka'
  - '   > https://groups.google.com/forum/#!topic/kubernetes-users/iLDsG85exRQ'
  - '   > https://github.com/garo/logs2kafka'
  - '   ```'
  - ''
  - '## Commands'
  - ''
  - '   ```'
  - '   # Get logs from pods'
  - '   $ kubectl get pods'
  - '   $ kubectl logs kafka-0'
  - '   ```'
  - ''
  - '   ```'
  - '   # Install docker log driver for Kafka'
  - '   $ docker ps --format "{{.Names}}" | grep -E ''kafka|logstash'''
  - '   $ docker inspect k8s_POD_kafka-0...'
  - '   $ docker inspect --format ''{{ .NetworkSettings.IPAddress }}'' k8s_POD_kafka-0...'
  - '   $ docker plugin install --disable mickyg/kafka-logdriver:latest'
  - '   $ docker plugin set mickyg/kafka-logdriver:latest KAFKA_BROKER_ADDR="10.2.28.10:9092"'
  - '   $ docker plugin inspect mickyg/kafka-logdriver'
  - '   $ docker plugin enable mickyg/kafka-logdriver:latest'
  - '   $ docker run --log-driver mickyg/kafka-logdriver:latest hello-world'
  - '   $ docker plugin disable mickyg/kafka-logdriver:latest'
  - '   ```'
  - ''
  - '   ```'
  - '   # Get current docker log driver'
  - '   $ docker info |grep ''Logging Driver'' # Default driver'
  - '   $ docker ps --format "{{.Names}}" | grep -E ''kafka|logstash'''
  - '   $ docker inspect k8s_POD_kafka-0...'
  - '   $ docker inspect --format ''{{ .NetworkSettings.IPAddress }}'' k8s_POD_logstash...'
  - '   $ docker inspect --format ''{{ .NetworkSettings.IPAddress }}'' k8s_POD_kafka-0...'
  - '   $ docker inspect $(docker ps | grep POD | awk ''{print $1}'') | grep -E "Hostname|NetworkID'
  - '   $ docker inspect $(docker ps | grep POD | awk ''{print $1}'') | while read
    line ; do egrep -E ''"Hostname"|"IPAddress"'' ; done | while read line ; do echo
    $line ; done'
  - '   ```'
  - ''
  - '## Configurations'
  - ''
  - '   ```'
  - '   # Logstash configuration'
  - '   $ vi elk-stack/logstash/build/pipeline/kafka.conf'
  - '     input {'
  - '         gelf {}'
  - '     }'
  - ''
  - '     output {'
  - '         elasticsearch {'
  - '           hosts => ["elasticsearch"]'
  - '         }'
  - '         stdout {}'
  - '     }'
  - '   ```'
  - ''
  - '   ```'
  - '   # Kafka configuration'
  - '   $ vi elk-stack/logstash/build/pipeline/kafka.conf'
  - '   kafka {'
  - '       type => "argus.docker"'
  - '       topics => ["dockerlogs"]'
  - '       codec => "plain"'
  - '       bootstrap_servers => "kafka:9092"'
  - '       consumer_threads => 1'
  - '   }'
  - '   ```'
  - ''
  - '## Solutions'
  - ''
  - '## Whiteboard'
  - ''
  description: Investigate docker log drivers and the logs2kafka log plugin.
  digest: 1abc5d4fe90224294a6af8dbec24c0be7888ffb71d20c3c8d297a7addf5dbd43
  filename: kubernetes-docker-log-driver-kafka.mkdn
  groups:
  - docker
  languages: []
  links:
  - https://github.com/MickayG/moby-kafka-logdriver
  - https://github.com/garo/logs2kafka
  - https://groups.google.com/forum/#!topic/kubernetes-users/iLDsG85exRQ
  name: ''
  source: ''
  tags:
  - docker
  - driver
  - kafka
  - kubernetes
  - logging
  - logs2kafka
  - moby
  - plugin
  updated: '2019-01-27T13:16:24.830676+00:00'
  uuid: 44999371-ea42-48ec-978e-980921619d4b
  versions: []
- brief: Debug Kafka
  category: solution
  created: '2018-01-10T07:29:35.000001+00:00'
  data:
  - '## Description'
  - ''
  - Debug and configure Kafka.
  - ''
  - '## References'
  - ''
  - '   ```'
  - '   # Versions'
  - '   # Kafka version: 1.0.0'
  - ''
  - '   # Release notes'
  - '   > https://kafka.apache.org/downloads'
  - '   ```'
  - ''
  - '## Commands'
  - ''
  - '   ```'
  - '   # Topics'
  - '   $ /usr/share/kafka/bin/kafka-topics.sh --describe --zookeeper zookeeper:2181'
  - '   $ /usr/share/kafka/bin/kafka-topics.sh --list --zookeeper zookeeper:2181'
  - '   $ /usr/share/kafka/bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092
    --list'
  - '   $ /usr/share/kafka/bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092
    --describe --group logstash'
  - '   ```'
  - ''
  - '## Configurations'
  - ''
  - '## Solutions'
  - ''
  - '## Whiteboard'
  - ''
  description: Debug and configure Kafka.
  digest: c6098b8258435eaac9898c5457dff7d2bf7a51052862853d168e74910f69b2b8
  filename: howto-debug-kafka.mkdn
  groups:
  - kafka
  languages: []
  links:
  - https://kafka.apache.org/downloads
  name: ''
  source: ''
  tags:
  - debug
  - howto
  - kafka
  - zookeeper
  updated: '2019-01-27T13:17:41.838739+00:00'
  uuid: 4ad6e229-404a-40d0-8f7f-b4344e256217
  versions: []
- brief: Debug Docker containers
  category: solution
  created: '2018-01-11T10:59:24.000001+00:00'
  data:
  - '## Description'
  - ''
  - Instructions how to debug Docker.
  - ''
  - '## References'
  - ''
  - '   ```'
  - '   # Versions'
  - '   # Docker version 17.09.0-ce, build afdb6d4'
  - '   # docker-compose version 1.16.1, build 6d1ac21'
  - ''
  - '   # Docker CE release notes'
  - '   > https://docs.docker.com/release-notes/docker-ce/'
  - ''
  - '   # Docker-compose release notes'
  - '   > https://github.com/docker/compose/releases/'
  - ''
  - '   # Name server lookup'
  - '   > https://www.computerhope.com/unix/unslooku.htm'
  - ''
  - '   # Resolving host names from containers'
  - '   > https://github.com/docker/libnetwork/pull/1855'
  - '   > https://github.com/docker/swarmkit/issues/1242'
  - ''
  - '   # Docker swarm DNS update problem'
  - '   > https://github.com/moby/moby/issues/30487'
  - '   ```'
  - ''
  - '## Commands'
  - ''
  - '   ```'
  - '   # Login to remote registry'
  - '   $ docker login -u admin -p registry 10.133.200.67:5000'
  - ''
  - '   # Creating and updating services in docker swarm'
  - '   $ docker service ls'
  - '   $ docker service rm elk_elasticsearch'
  - '   $ docker service create --network elk_default --name elk_elasticsearch --hostname={{.Service.Name}}-{{.Task.Slot}}
    elk/elasticsearch:latest'
  - '   $ docker service create --network elk_default --name elk_nginx --host elk_kibana:10.0.0.15
    --host elk_elasticsearch:10.0.0.20 elk/nginx:latest'
  - '   $ docker service update --force 2cp9rhiul9ss'
  - ''
  - '   # Inspecting swarm'
  - '   $ docker node ls'
  - ''
  - '   # Inspecting swarm default overlay network'
  - '   $ docker network ls'
  - '   $ docker network inspect elk_default'
  - ''
  - '   # Inspecting swarm networking'
  - '   $ docker service ls'
  - '   $ docker service inspect --pretty elk_elasticsearch'
  - '   $ docker network ls'
  - '   $ docker inspect elk_default'
  - ''
  - '   # Name server lookup'
  - '   $ nslookup -type=a elasticsearch'
  - ''
  - '   # Docker host networking'
  - '   $ iptables -t nat --list'
  - '   ```'
  - ''
  - '## Configurations'
  - ''
  - '## Solutions'
  - ''
  - '   ```'
  - '   # Set proxy for Docker'
  - '   # ===================='
  - '   #'
  - '   # Proxy settings for Docker. Repeat ''Environment'' parameter to add more'
  - '   # proxies.'
  - '   $ env | grep http'
  - '   $ mkdir /etc/systemd/system/docker.service.d'
  - '   $ vi /etc/systemd/system/docker.service.d/http-proxy.conf'
  - '        [Service]'
  - '         Environment="HTTP_PROXY=http://10.158.100.1:8080/"'
  - '   ```'
  - ''
  - '   ```'
  - '   # Move Docker device mapper to ephemeral to gain more disk space'
  - '   # =============================================================='
  - '   #'
  - '   $ df -h'
  - '   $ df -i'
  - '   $ docker rm $(docker ps -a -q)'
  - '   $ docker rmi $(docker images -q)'
  - '   $ sudo systemctl stop docker'
  - '   $ ls -al /var/lib/docker'
  - '   $ rm -rdf /var/lib/docker'
  - '   $ mkdir -p /ephemeral/docker/devicemapper/devicemapper'
  - '   $ dd if=/dev/zero of=/ephemeral/docker/devicemapper/devicemapper/data bs=1G
    count=0 seek=250'
  - '   $ sudo systemctl cat docker'
  - '   $ vi /usr/lib/systemd/system/docker.service'
  - '        ExecStart=/usr/bin/dockerd -g /ephemeral/docker'
  - '   $ sudo systemctl daemon-reload'
  - '   $ sudo systemctl enable docker.service'
  - '   $ sudo systemctl start docker'
  - '   $ docker info | grep "Data Space Available"'
  - '        Data Space Available: 268.4 GB'
  - '   $ docker run --rm hello-world'
  - '   ```'
  - ''
  - '   ```'
  - '   # Services are not started in Swarm'
  - '   # ================================='
  - '   #'
  - '   # This may be related to vxlan issues and it is visible from journal logs.'
  - '   # The symptom is that services are not starting in Swarm. The solution'
  - '   # was tried with ''Docker version 17.09.0-ce, build afdb6d4'' on RHEL7.4'
  - '   # with Kernel 3.10.0-693.el7.x86_64.'
  - '   > https://github.com/docker/libnetwork/issues/1765'
  - '   $ journalctl -f | grep ''error creating vxlan'''
  - '   $ docker swarm leave --force'
  - '   $ systemctl restart docker.service'
  - '   $ docker swarm init'
  - '   ```'
  - ''
  - '   ```'
  - '   # Cannot remove all directories under Docker installation folder'
  - '   # =============================================================='
  - '   #'
  - '   # There are some resources hanging and rm command fails. The below'
  - '   # described solution is more recommended than just removing the folder'
  - '   # with force. The procedure below nukes the whole folder.'
  - '   $ cd ~'
  - '   $ systemctl stop docker.service'
  - '   $ wget https://github.com/moby/moby/blob/620339f166984540f15aadef2348646eee9a5b42/contrib/nuke-graph-directory.sh'
  - '   $ mv nuke-graph-directory.sh nuke-docker.sh'
  - '   $ chmod 755 nuke-docker.sh'
  - '   $ ./nuke-docker.sh /var/lib/docker'
  - '   ```'
  - ''
  - '## Whiteboard'
  - ''
  description: Instructions how to debug Docker.
  digest: d008e16734471d9251bc11c502b1a60d4020b9d26829425afefcc296075cb766
  filename: howto-debug-docker.mkdn
  groups:
  - docker
  languages: []
  links:
  - https://docs.docker.com/release-notes/docker-ce/
  - https://github.com/docker/compose/releases/
  - https://github.com/docker/libnetwork/issues/1765
  - https://github.com/docker/libnetwork/pull/1855
  - https://github.com/docker/swarmkit/issues/1242
  - https://github.com/moby/moby/issues/30487
  - https://www.computerhope.com/unix/unslooku.htm
  name: ''
  source: ''
  tags:
  - debug
  - docker
  - howto
  - swarm
  updated: '2019-01-27T13:19:56.239217+00:00'
  uuid: 73be0a8f-af42-40c4-9102-ed26f76439c7
  versions: []
- brief: Debug nginx load balancer
  category: solution
  created: '2018-01-11T11:00:32.000001+00:00'
  data:
  - '## Description'
  - ''
  - Instructions how to debug nginx.
  - ''
  - '## References'
  - ''
  - '   ```'
  - '   # Versions'
  - '   # nginx version: nginx/1.13.5'
  - ''
  - '   # Release notes'
  - '   > http://nginx.org/en/CHANGES'
  - ''
  - '   # Official nginx debugging'
  - '   > https://www.nginx.com/resources/admin-guide/debug/'
  - ''
  - '   # Dynamic upstreams'
  - '   > https://www.nginx.com/blog/dns-service-discovery-nginx-plus/'
  - '   > https://tenzer.dk/nginx-with-dynamic-upstreams/'
  - '   ```'
  - ''
  - '## Commands'
  - ''
  - '   ```'
  - '   # Test if nginx is configured with --with-debug'
  - '   $ nginx -V 2>&1 | grep -- ''--with-debug'''
  - ''
  - '   # Check the logs are forwarded to stdout/stderr and remove links'
  - '   $ ls -al /var/log/nginx/'
  - '   $ unlink /var/log/nginx/access.log'
  - '   $ unlink /var/log/nginx/error.log'
  - ''
  - '   # Reloading nginx configuration'
  - '   $ nginx -s reload'
  - '   ```'
  - ''
  - '## Configurations'
  - ''
  - '   ```'
  - '   # Configuring nginx default.conf. The upstream blocks are resolved only'
  - '   # once when the nginx starts. The variable trick allows resolving the'
  - '   # IP address. This allows recovery from situations where for example'
  - '   # a docker container restart changes the IP address. See ''Dynamic'
  - '   # upstreams'' for more information.'
  - '   $ vi conf.d/default.conf'
  - '     upstream kibana_servers {'
  - '         server kibana:5601;'
  - '     }'
  - '     upstream elasticsearch_servers {'
  - '         server elasticsearch:9200;'
  - '     }'
  - '     #resolver 127.0.0.11 valid=1s ipv6=off; # Resolver for docker container.'
  - '     server {'
  - '         listen 9200;'
  - '         add_header X-Frame-Options "SAMEORIGIN";'
  - '         proxy_set_header        Host $host;'
  - '         proxy_set_header        X-Real-IP $remote_addr;'
  - '         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;'
  - '         proxy_set_header        X-Forwarded-Proto $scheme;'
  - '         proxy_set_header        X-Forwarded-Host $http_host;'
  - '         location / {'
  - '                 set $kibana_servers     kibana;'
  - '                 proxy_pass              http://$kibana_test:5601;'
  - '                 #proxy_pass             http://kibana_servers;'
  - '         }'
  - '         location /kibana {'
  - '                 proxy_pass              http://kibana_servers/app/kibana;'
  - '         }'
  - '         location ~ /elastic(/|$)(.*) {'
  - '                 proxy_pass              http://elasticsearch_servers/$2$is_args$args;'
  - '         }'
  - '     }'
  - ''
  - '   $ vi nginx.conf'
  - '     user  nginx;'
  - '     worker_processes  1;'
  - ''
  - '     error_log  /var/log/nginx/error.log debug;'
  - '     pid        /var/run/nginx.pid;'
  - ''
  - '     events {'
  - '         worker_connections  1024;'
  - '     }'
  - ''
  - '     http {'
  - '         include       /etc/nginx/mime.types;'
  - '         default_type  application/octet-stream;'
  - ''
  - '         log_format  main  ''$remote_addr - $remote_user [$time_local] "$request"
    '''
  - '                           ''$status $body_bytes_sent "$http_referer" '''
  - '                           ''"$http_user_agent" "$http_x_forwarded_for"'';'
  - ''
  - '         access_log  /var/log/nginx/access.log  main;'
  - ''
  - '         sendfile        on;'
  - '         #tcp_nopush     on;'
  - ''
  - '         keepalive_timeout  65;'
  - ''
  - '         #gzip  on;'
  - ''
  - '         include /etc/nginx/conf.d/*.conf;'
  - '     }'
  - '   ```'
  - ''
  - '## Solutions'
  - ''
  - '   ```'
  - '   # Passing query parameter'
  - '   # ======================='
  - '   #'
  - '   # Pass query parameters from nginx location by adding $is_args$args:'
  - '   location ~ /elastic(/|$)(.*) {'
  - '       set $elasticsearch_servers elasticsearch;'
  - '       proxy_pass                 http://$elasticsearch_servers:9200/$2$is_args$args;'
  - '   }'
  - '   ```'
  - ''
  - '   ```'
  - '   # Configure Kibana behind specific base path'
  - '   # =========================================='
  - '   #'
  - '   # It may be that the Kibana does not working correctly with base'
  - '   # path. Because of this /1/, a rewrite is currently needed. It'
  - '   # may be because of reroute below, the forwarding with 302 does'
  - '   # not work. It is left as an example here.'
  - '   # /1/ https://github.com/elastic/kibana/issues/5230#issuecomment-288737969'
  - '   $ vi kibana.yaml'
  - '     server.basePath: "/kibana"'
  - '     xpack.reporting.kibanaApp: "/kibana/app/kibana"'
  - '   $ vi default.conf'
  - '     server {'
  - '         location /kibana/ {'
  - '             proxy_pass http://kibana:5601;'
  - '             proxy_http_version 1.1;'
  - '             proxy_set_header Upgrade $http_upgrade;'
  - '             proxy_set_header Connection "upgrade";'
  - '             proxy_set_header Host $host;'
  - '             rewrite /kibana/(.*)$ /$1 break;'
  - '         }'
  - '         # Handle landing url without trailing slash.'
  - '         location = /kibana {'
  - '            return 302 /kibana/;'
  - '         }'
  - '     }'
  - '   ```'
  - ''
  - '## Whiteboard'
  - ''
  - '   ```'
  - '   # Change nginx configuration'
  - '   $ docker exec -i -t $(docker ps | egrep -m 1 ''petelk/nginx'' | awk ''{print
    $1}'') /bin/bash'
  - '   $ echo '''
  - '     upstream kibana_servers {'
  - '         server kibana:5601;'
  - '     }'
  - '     upstream elasticsearch_servers {'
  - '         server elasticsearch:9200;'
  - '     }'
  - '     upstream registry_servers {'
  - '         server registry:5000;'
  - '     }'
  - '     upstream jenkins_servers {'
  - '         server jenkins:8080;'
  - '     }'
  - '     server {'
  - '         resolver kube-dns.kube-system.svc.cluster.local;'
  - '         error_log /nginx.log debug;'
  - '         access_log /access.log;'
  - '         client_max_body_size 0;'
  - '         listen 9200;'
  - '         add_header X-Frame-Options "SAMEORIGIN";'
  - '         proxy_set_header        Host $host;'
  - '         proxy_set_header        X-Real-IP $remote_addr;'
  - '         proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;'
  - '         proxy_set_header        X-Forwarded-Proto $scheme;'
  - '         proxy_set_header        X-Forwarded-Host $http_host;'
  - '         location / {'
  - '             proxy_pass          http://kibana_servers;'
  - '         }'
  - '         location /kibana {'
  - '             proxy_pass          http://kibana_servers/app/kibana;'
  - '         }'
  - '         location ~ /elastic(/|$)(.*) {'
  - '             proxy_pass          http://elasticsearch_servers/$2$is_args$args;'
  - '         }'
  - '         location /v2 {'
  - '             proxy_pass          http://registry:5000;'
  - '             proxy_read_timeout  900;'
  - '         }'
  - '         location /jenkins {'
  - '             proxy_pass          http://jenkins:8080;'
  - '         }'
  - '     }'
  - '     '' | tee /etc/nginx/conf.d/default.conf && nginx -s reload'
  - '   ```'
  - ''
  description: Instructions how to debug nginx.
  digest: 2288959af65933b6d9a8fe0bf6ec5c0cb68abead21300d597ea3bf82540e7654
  filename: howto-debug-nginx.mkdn
  groups:
  - nginx
  languages: []
  links:
  - http://nginx.org/en/CHANGES
  - https://tenzer.dk/nginx-with-dynamic-upstreams/
  - https://www.nginx.com/blog/dns-service-discovery-nginx-plus/
  - https://www.nginx.com/resources/admin-guide/debug/
  name: ''
  source: ''
  tags:
  - debug
  - howto
  - logging
  - nginx
  updated: '2019-01-27T13:18:29.201517+00:00'
  uuid: 5211dd43-4a40-4f4a-94cc-c96ad3c68578
  versions: []
- brief: Debug Kubernetes
  category: solution
  created: '2018-02-15T13:49:38.000001+00:00'
  data:
  - '## Description'
  - ''
  - Debug and configure Kubernetes
  - ''
  - '## References'
  - ''
  - '   ```'
  - '   # Versions'
  - '   # clientVersion: gitVersion: v1.9.1'
  - '   # serverVersion: gitVersion: v1.9.1'
  - ''
  - '   # Release notes'
  - '   > https://github.com/kubernetes/kubernetes/releases'
  - ''
  - '   # Getting started (Blog)'
  - '   > https://blog.codeship.com/getting-started-with-kubernetes/'
  - '   ```'
  - ''
  - '## Commands'
  - ''
  - '   ```'
  - '   # Version'
  - '   $ kubectl version -o yaml'
  - ''
  - '   # Configuration'
  - '   $ cat ~/.kube/config'
  - ''
  - '   # Cluster'
  - '   $ kubectl cluster-info'
  - '   $ kubectl cluster-info dump'
  - ''
  - '   # Nodes'
  - '   $ kubectl get nodes'
  - '   $ kubectl get nodes --show-labels'
  - '   $ kubectl label nodes 10.255.65.124 node=master-1'
  - '   $ kubectl label nodes 10.255.71.208 node=worker-1'
  - ''
  - '   # Pods'
  - '   $ kubectl get pods -n kube-system'
  - '   $ kubectl get pods --all-namespaces'
  - ''
  - '   # Namespaces'
  - '   $ kubectl get namespace'
  - '   $ kubectl create namespace elk'
  - '   $ kubectl config set-context $(kubectl config current-context) --namespace=elk'
  - '   $ kubectl get all --namespace elk'
  - ''
  - '   # Resources'
  - '   $ kubectl get rc'
  - ''
  - '   # Services'
  - '   $ kubectl create -f ./manifests/301-svc-registry.yaml'
  - '   $ kubectl delete -f ./manifests/301-svc-registry.yaml'
  - '   $ kubectl get service cm -o=yaml'
  - '   $ kubectl get all -o wide'
  - ''
  - '   # Restart pod (two options)'
  - '   $ kubectl get pod kubernetes-dashboard-845747bdd4-9fbd6 -n kube-system -o
    yaml | kubectl replace --force -f -'
  - '   $ kubectl -n kube-system delete $(kubectl -n kube-system get pod -o name |
    grep dashboard)'
  - ''
  - '   # Deployments and scaling'
  - '   $ kubectl get deployments'
  - '   $ kubectl scale --current-replicas=1 --replicas=2 deployment/debugger'
  - ''
  - '   # Logs'
  - '   $ kubectl get pods'
  - '   $ kubectl logs nginx-3107262526-k01hd'
  - '   $ kubectl logs $(kubectl get pods | egrep -m 1 ''redis'' | awk ''{print $1}'')'
  - ''
  - '   # Kube DNS'
  - '   $ kubectl get po --all-namespaces'
  - '   $ kubectl get ep kube-dns --namespace=kube-system'
  - '   $ kubectl describe svc kube-dns --namespace=kube-system'
  - '   $ kubectl describe po kube-dns-6f4fd4bdf-gqcj9 --namespace=kube-system'
  - ''
  - '   # Unconfigure cluster'
  - '   $ kubeadm reset'
  - '   ```'
  - ''
  - '## Configurations'
  - ''
  - '## Solutions'
  - ''
  - '   ```'
  - '   # Kubectl commands time out'
  - '   # ========================='
  - '   #'
  - '   # Setting no_proxy for external interface like eth0 may help. The problem'
  - '   # may be due to corporate firewalls.'
  - '   $ export no_proxy=$no_proxy,10.253.22.33'
  - ''
  - '   # Kubernetes cluster nodes crashes'
  - '   # ================================'
  - '   #'
  - '   # There may be too less disk space. The problem is seen when there has'
  - '   # been 3GB (~15%) free disk space. By default the Docker installs images'
  - '   # on root. The solution is to install the Docker device mapper for example'
  - '   # to ephemeral disk that has more disk space.'
  - '   $ df -h'
  - '   $ docker ps -a'
  - '   $ journalctl -r | grep -E ''node has conditions: \[DiskPressure\]'''
  - '   ```'
  - ''
  - '   ```'
  - '   # Deploy and access dashboard'
  - '   # ==========================='
  - '   #'
  - '   # The default examples do not give any privileges to Dashboard.'
  - '   > https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/#deploying-the-dashboard-ui'
  - '   $ kubectl config view'
  - '   $ kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/alternative/kubernetes-dashboard.yaml'
  - '   $ vi dashboard_admin.yaml'
  - '     apiVersion: rbac.authorization.k8s.io/v1beta1'
  - '     kind: ClusterRoleBinding'
  - '     metadata:'
  - '       name: kubernetes-dashboard'
  - '       labels:'
  - '         k8s-app: kubernetes-dashboard'
  - '     roleRef:'
  - '       apiGroup: rbac.authorization.k8s.io'
  - '       kind: ClusterRole'
  - '       name: cluster-admin'
  - '     subjects:'
  - '     - kind: ServiceAccount'
  - '       name: kubernetes-dashboard'
  - '       namespace: kube-system'
  - '   $ kubectl create -f dashboard_admin.yaml'
  - '   $ kubectl edit svc kubernetes-dashboard -n kube-system #Set type to NodePort'
  - '   ```'
  - ''
  - '   ```'
  - '   # Recommended way that does not seem to work. The problem seems to be that'
  - '   # there are no privileges given to dashboard in recomended way.'
  - '   $ kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml'
  - '   $ kubectl edit svc kubernetes-dashboard -n kube-system # Set to ''type: NodePort'''
  - '   $ kubectl get pod kubernetes-dashboard-845747bdd4-9fbd6 -n kube-system -o
    yaml | kubectl replace --force -f -'
  - '   $ kubectl -n kube-system delete $(kubectl -n kube-system get pod -o name |
    grep dashboard)'
  - '   $ kubectl describe pod kubernetes-dashboard-845747bdd4-jjrjf -n kube-system'
  - '   $ kubectl get all -n kube-system'
  - '   ```'
  - ''
  - '## Whiteboard'
  - ''
  description: Debug and configure Kubernetes
  digest: beb7d5a968d9025b10df2e23cca61b75b307e207630fe223aa52ace4e4851da1
  filename: howto-debug-kubernetes.mkdn
  groups:
  - kubernetes
  languages: []
  links:
  - https://blog.codeship.com/getting-started-with-kubernetes/
  - https://github.com/kubernetes/kubernetes/releases
  - https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/#deploying-the-dashboard-ui
  name: ''
  source: ''
  tags:
  - debug
  - docker
  - howto
  - kubernetes
  - moby
  updated: '2019-01-27T13:17:51.831220+00:00'
  uuid: 5d44f0ca-4d92-4736-b913-41ac38503b1d
  versions: []
meta:
  homepage: https://github.com/heilaaks/snippy
  updated: '2020-03-29T16:04:59.787999+00:00'
  version: 0.11.0
